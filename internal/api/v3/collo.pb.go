// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: api/v3/collo.proto

package apiv3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestConfig_PickGroupType int32

const (
	RequestConfig_PICK_GROUP_TYPE_UNSPECIFIED RequestConfig_PickGroupType = 0
	RequestConfig_PICK_GROUP_TYPE_ISSUEID     RequestConfig_PickGroupType = 1 // 会議録ごと
	RequestConfig_PICK_GROUP_TYPE_MONTH       RequestConfig_PickGroupType = 2 // 月ごと(ex: 2024-01-01)
)

// Enum value maps for RequestConfig_PickGroupType.
var (
	RequestConfig_PickGroupType_name = map[int32]string{
		0: "PICK_GROUP_TYPE_UNSPECIFIED",
		1: "PICK_GROUP_TYPE_ISSUEID",
		2: "PICK_GROUP_TYPE_MONTH",
	}
	RequestConfig_PickGroupType_value = map[string]int32{
		"PICK_GROUP_TYPE_UNSPECIFIED": 0,
		"PICK_GROUP_TYPE_ISSUEID":     1,
		"PICK_GROUP_TYPE_MONTH":       2,
	}
)

func (x RequestConfig_PickGroupType) Enum() *RequestConfig_PickGroupType {
	p := new(RequestConfig_PickGroupType)
	*p = x
	return p
}

func (x RequestConfig_PickGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestConfig_PickGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_collo_proto_enumTypes[0].Descriptor()
}

func (RequestConfig_PickGroupType) Type() protoreflect.EnumType {
	return &file_api_v3_collo_proto_enumTypes[0]
}

func (x RequestConfig_PickGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestConfig_PickGroupType.Descriptor instead.
func (RequestConfig_PickGroupType) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{4, 0}
}

type RequestConfig_NdlApiType int32

const (
	RequestConfig_NDL_API_TYPE_UNSPECIFIED        RequestConfig_NdlApiType = 0
	RequestConfig_NDL_API_TYPE_SPEECH_UNSPECIFIED RequestConfig_NdlApiType = 1 // 発言単位
	RequestConfig_NDL_API_TYPE_MEETING            RequestConfig_NdlApiType = 2 // 会議単位
)

// Enum value maps for RequestConfig_NdlApiType.
var (
	RequestConfig_NdlApiType_name = map[int32]string{
		0: "NDL_API_TYPE_UNSPECIFIED",
		1: "NDL_API_TYPE_SPEECH_UNSPECIFIED",
		2: "NDL_API_TYPE_MEETING",
	}
	RequestConfig_NdlApiType_value = map[string]int32{
		"NDL_API_TYPE_UNSPECIFIED":        0,
		"NDL_API_TYPE_SPEECH_UNSPECIFIED": 1,
		"NDL_API_TYPE_MEETING":            2,
	}
)

func (x RequestConfig_NdlApiType) Enum() *RequestConfig_NdlApiType {
	p := new(RequestConfig_NdlApiType)
	*p = x
	return p
}

func (x RequestConfig_NdlApiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestConfig_NdlApiType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_collo_proto_enumTypes[1].Descriptor()
}

func (RequestConfig_NdlApiType) Type() protoreflect.EnumType {
	return &file_api_v3_collo_proto_enumTypes[1]
}

func (x RequestConfig_NdlApiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestConfig_NdlApiType.Descriptor instead.
func (RequestConfig_NdlApiType) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{4, 1}
}

// 共起ネットワーク情報を取得する。
type NetworkStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config        *RequestConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`                                      // リクエスト設定
	ForcusNodeId  uint32         `protobuf:"varint,2,opt,name=forcus_node_id,json=forcusNodeId,proto3" json:"forcus_node_id,omitempty"`   // 特定のノードに関連する共起情報を返す。Falsyの時もっとも重要な3つのノードとその関連する共起情報を返す。
	ForcusGroupId string         `protobuf:"bytes,3,opt,name=forcus_group_id,json=forcusGroupId,proto3" json:"forcus_group_id,omitempty"` // 特定のグループの共起行列についてのみ共起情報を返す。Falsyの時、生成したすべての共起行列について返す。
}

func (x *NetworkStreamRequest) Reset() {
	*x = NetworkStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStreamRequest) ProtoMessage() {}

func (x *NetworkStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStreamRequest.ProtoReflect.Descriptor instead.
func (*NetworkStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkStreamRequest) GetConfig() *RequestConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NetworkStreamRequest) GetForcusNodeId() uint32 {
	if x != nil {
		return x.ForcusNodeId
	}
	return 0
}

func (x *NetworkStreamRequest) GetForcusGroupId() string {
	if x != nil {
		return x.ForcusGroupId
	}
	return ""
}

// 共起ネットワーク情報。とその進捗情報。
type NetworkStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes   []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges   []*Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	Meta    *Meta   `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Process float32 `protobuf:"fixed32,4,opt,name=process,proto3" json:"process,omitempty"` // 進捗
}

func (x *NetworkStreamResponse) Reset() {
	*x = NetworkStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStreamResponse) ProtoMessage() {}

func (x *NetworkStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStreamResponse.ProtoReflect.Descriptor instead.
func (*NetworkStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkStreamResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NetworkStreamResponse) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *NetworkStreamResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *NetworkStreamResponse) GetProcess() float32 {
	if x != nil {
		return x.Process
	}
	return 0
}

// 共起行列中の任意の数のノードを重要度順に取得する。
type NodeRateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config        *RequestConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`                                      // リクエスト設定
	Offset        uint32         `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                                     // start with 0 デフォルト0。
	Limit         uint32         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                                       // デフォルト100。
	ForcusGroupId string         `protobuf:"bytes,4,opt,name=forcus_group_id,json=forcusGroupId,proto3" json:"forcus_group_id,omitempty"` // 特定のグループの共起行列についてのみ返す。Falsyの時、生成したすべての共起行列について返す。
}

func (x *NodeRateStreamRequest) Reset() {
	*x = NodeRateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRateStreamRequest) ProtoMessage() {}

func (x *NodeRateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRateStreamRequest.ProtoReflect.Descriptor instead.
func (*NodeRateStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRateStreamRequest) GetConfig() *RequestConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NodeRateStreamRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NodeRateStreamRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NodeRateStreamRequest) GetForcusGroupId() string {
	if x != nil {
		return x.ForcusGroupId
	}
	return ""
}

// 共起行列中の任意の数のノードを重要度順に返す。
type NodeRateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes   []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Num     uint32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`     // ノード保持総数。
	Next    uint32  `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`   // 次回取得位置。0のときは最後まで取得済みとみなす。
	Count   uint32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"` // 返却個数。
	Meta    *Meta   `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	Process float32 `protobuf:"fixed32,6,opt,name=process,proto3" json:"process,omitempty"` // 進捗
}

func (x *NodeRateStreamResponse) Reset() {
	*x = NodeRateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRateStreamResponse) ProtoMessage() {}

func (x *NodeRateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRateStreamResponse.ProtoReflect.Descriptor instead.
func (*NodeRateStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{3}
}

func (x *NodeRateStreamResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodeRateStreamResponse) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *NodeRateStreamResponse) GetNext() uint32 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *NodeRateStreamResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NodeRateStreamResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *NodeRateStreamResponse) GetProcess() float32 {
	if x != nil {
		return x.Process
	}
	return 0
}

type RequestConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword           string                      `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                                                                             // API検索キーワード。必須。
	From              *timestamppb.Timestamp      `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                                                                                   // API検索開始日。必須。
	Until             *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=until,proto3" json:"until,omitempty"`                                                                                 // API検索終了日。必須。
	PartOfSpeechTypes []uint32                    `protobuf:"varint,4,rep,packed,name=part_of_speech_types,json=partOfSpeechTypes,proto3" json:"part_of_speech_types,omitempty"`                    // 行列使用品詞。オプション。
	Stopwords         []string                    `protobuf:"bytes,5,rep,name=stopwords,proto3" json:"stopwords,omitempty"`                                                                         // 解析に使用しない単語。オプション。
	ForcusGroupId     string                      `protobuf:"bytes,6,opt,name=forcus_group_id,json=forcusGroupId,proto3" json:"forcus_group_id,omitempty"`                                          // 使用する共起行列。任意の文字列あるいは"total"(文書全体)、指定しない場合、すべてのグループと文書全体の共起行列を生成する。
	PickGroupType     RequestConfig_PickGroupType `protobuf:"varint,7,opt,name=pick_group_type,json=pickGroupType,proto3,enum=api.v3.RequestConfig_PickGroupType" json:"pick_group_type,omitempty"` // グルーピング手法。デフォルトは会議録ごと（1）。
	NdlApiType        RequestConfig_NdlApiType    `protobuf:"varint,8,opt,name=ndl_api_type,json=ndlApiType,proto3,enum=api.v3.RequestConfig_NdlApiType" json:"ndl_api_type,omitempty"`             // 使用するAPIの種類。デフォルトは、発言単位（1）。
}

func (x *RequestConfig) Reset() {
	*x = RequestConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConfig) ProtoMessage() {}

func (x *RequestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConfig.ProtoReflect.Descriptor instead.
func (*RequestConfig) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{4}
}

func (x *RequestConfig) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RequestConfig) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RequestConfig) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *RequestConfig) GetPartOfSpeechTypes() []uint32 {
	if x != nil {
		return x.PartOfSpeechTypes
	}
	return nil
}

func (x *RequestConfig) GetStopwords() []string {
	if x != nil {
		return x.Stopwords
	}
	return nil
}

func (x *RequestConfig) GetForcusGroupId() string {
	if x != nil {
		return x.ForcusGroupId
	}
	return ""
}

func (x *RequestConfig) GetPickGroupType() RequestConfig_PickGroupType {
	if x != nil {
		return x.PickGroupType
	}
	return RequestConfig_PICK_GROUP_TYPE_UNSPECIFIED
}

func (x *RequestConfig) GetNdlApiType() RequestConfig_NdlApiType {
	if x != nil {
		return x.NdlApiType
	}
	return RequestConfig_NDL_API_TYPE_UNSPECIFIED
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   uint32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Word     string  `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	Rate     float32 `protobuf:"fixed32,3,opt,name=rate,proto3" json:"rate,omitempty"`                        // 中心度
	NumEdges uint32  `protobuf:"varint,4,opt,name=num_edges,json=numEdges,proto3" json:"num_edges,omitempty"` // 共起ワード数
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{5}
}

func (x *Node) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Node) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Node) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Node) GetNumEdges() uint32 {
	if x != nil {
		return x.NumEdges
	}
	return 0
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeId  uint32  `protobuf:"varint,1,opt,name=edge_id,json=edgeId,proto3" json:"edge_id,omitempty"`
	NodeId1 uint32  `protobuf:"varint,2,opt,name=node_id1,json=nodeId1,proto3" json:"node_id1,omitempty"`
	NodeId2 uint32  `protobuf:"varint,3,opt,name=node_id2,json=nodeId2,proto3" json:"node_id2,omitempty"`
	Rate    float32 `protobuf:"fixed32,4,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{6}
}

func (x *Edge) GetEdgeId() uint32 {
	if x != nil {
		return x.EdgeId
	}
	return 0
}

func (x *Edge) GetNodeId1() uint32 {
	if x != nil {
		return x.NodeId1
	}
	return 0
}

func (x *Edge) GetNodeId2() uint32 {
	if x != nil {
		return x.NodeId2
	}
	return 0
}

func (x *Edge) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // 共起行列が所属するグループ
	From    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Until   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=until,proto3" json:"until,omitempty"`
	Metas   []*DocMeta             `protobuf:"bytes,4,rep,name=metas,proto3" json:"metas,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{7}
}

func (x *Meta) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Meta) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Meta) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *Meta) GetMetas() []*DocMeta {
	if x != nil {
		return x.Metas
	}
	return nil
}

type DocMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	GroupId     string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	At          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=at,proto3" json:"at,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DocMeta) Reset() {
	*x = DocMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_collo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocMeta) ProtoMessage() {}

func (x *DocMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_collo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocMeta.ProtoReflect.Descriptor instead.
func (*DocMeta) Descriptor() ([]byte, []int) {
	return file_api_v3_collo_proto_rawDescGZIP(), []int{8}
}

func (x *DocMeta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DocMeta) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DocMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DocMeta) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *DocMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_api_v3_collo_proto protoreflect.FileDescriptor

var file_api_v3_collo_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01,
	0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x75, 0x73, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66,
	0x6f, 0x72, 0x63, 0x75, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66,
	0x6f, 0x72, 0x63, 0x75, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x63,
	0x75, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0xb4, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe8, 0x04, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x75, 0x73, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x6f, 0x72, 0x63, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0f,
	0x70, 0x69, 0x63, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x69, 0x63,
	0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x70, 0x69, 0x63, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x6e, 0x64, 0x6c,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x64, 0x6c, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6e, 0x64, 0x6c, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a,
	0x0d, 0x50, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x1b, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x49, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x49, 0x43, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x22, 0x69, 0x0a, 0x0a, 0x4e, 0x64, 0x6c, 0x41, 0x70,
	0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x44, 0x4c, 0x5f, 0x41, 0x50, 0x49,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x44, 0x4c, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x44, 0x4c, 0x5f,
	0x41, 0x50, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x45, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x22, 0x64, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x75, 0x6d, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6e, 0x75, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x65, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x33, 0x2e, 0x44, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x22, 0x98, 0x01, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x02, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb5, 0x01, 0x0a, 0x10,
	0x4d, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4e, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x51, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x79, 0x79, 0x79, 0x6f, 0x69, 0x63, 0x68, 0x69, 0x2f,
	0x43, 0x6f, 0x6c, 0x6c, 0x6f, 0x2d, 0x41, 0x50, 0x49, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x33, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v3_collo_proto_rawDescOnce sync.Once
	file_api_v3_collo_proto_rawDescData = file_api_v3_collo_proto_rawDesc
)

func file_api_v3_collo_proto_rawDescGZIP() []byte {
	file_api_v3_collo_proto_rawDescOnce.Do(func() {
		file_api_v3_collo_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v3_collo_proto_rawDescData)
	})
	return file_api_v3_collo_proto_rawDescData
}

var file_api_v3_collo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v3_collo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v3_collo_proto_goTypes = []interface{}{
	(RequestConfig_PickGroupType)(0), // 0: api.v3.RequestConfig.PickGroupType
	(RequestConfig_NdlApiType)(0),    // 1: api.v3.RequestConfig.NdlApiType
	(*NetworkStreamRequest)(nil),     // 2: api.v3.NetworkStreamRequest
	(*NetworkStreamResponse)(nil),    // 3: api.v3.NetworkStreamResponse
	(*NodeRateStreamRequest)(nil),    // 4: api.v3.NodeRateStreamRequest
	(*NodeRateStreamResponse)(nil),   // 5: api.v3.NodeRateStreamResponse
	(*RequestConfig)(nil),            // 6: api.v3.RequestConfig
	(*Node)(nil),                     // 7: api.v3.Node
	(*Edge)(nil),                     // 8: api.v3.Edge
	(*Meta)(nil),                     // 9: api.v3.Meta
	(*DocMeta)(nil),                  // 10: api.v3.DocMeta
	(*timestamppb.Timestamp)(nil),    // 11: google.protobuf.Timestamp
}
var file_api_v3_collo_proto_depIdxs = []int32{
	6,  // 0: api.v3.NetworkStreamRequest.config:type_name -> api.v3.RequestConfig
	7,  // 1: api.v3.NetworkStreamResponse.nodes:type_name -> api.v3.Node
	8,  // 2: api.v3.NetworkStreamResponse.edges:type_name -> api.v3.Edge
	9,  // 3: api.v3.NetworkStreamResponse.meta:type_name -> api.v3.Meta
	6,  // 4: api.v3.NodeRateStreamRequest.config:type_name -> api.v3.RequestConfig
	7,  // 5: api.v3.NodeRateStreamResponse.nodes:type_name -> api.v3.Node
	9,  // 6: api.v3.NodeRateStreamResponse.meta:type_name -> api.v3.Meta
	11, // 7: api.v3.RequestConfig.from:type_name -> google.protobuf.Timestamp
	11, // 8: api.v3.RequestConfig.until:type_name -> google.protobuf.Timestamp
	0,  // 9: api.v3.RequestConfig.pick_group_type:type_name -> api.v3.RequestConfig.PickGroupType
	1,  // 10: api.v3.RequestConfig.ndl_api_type:type_name -> api.v3.RequestConfig.NdlApiType
	11, // 11: api.v3.Meta.from:type_name -> google.protobuf.Timestamp
	11, // 12: api.v3.Meta.until:type_name -> google.protobuf.Timestamp
	10, // 13: api.v3.Meta.metas:type_name -> api.v3.DocMeta
	11, // 14: api.v3.DocMeta.at:type_name -> google.protobuf.Timestamp
	2,  // 15: api.v3.MintGreenService.NetworkStream:input_type -> api.v3.NetworkStreamRequest
	4,  // 16: api.v3.MintGreenService.NodeRateStream:input_type -> api.v3.NodeRateStreamRequest
	3,  // 17: api.v3.MintGreenService.NetworkStream:output_type -> api.v3.NetworkStreamResponse
	5,  // 18: api.v3.MintGreenService.NodeRateStream:output_type -> api.v3.NodeRateStreamResponse
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_v3_collo_proto_init() }
func file_api_v3_collo_proto_init() {
	if File_api_v3_collo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v3_collo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_collo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v3_collo_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v3_collo_proto_goTypes,
		DependencyIndexes: file_api_v3_collo_proto_depIdxs,
		EnumInfos:         file_api_v3_collo_proto_enumTypes,
		MessageInfos:      file_api_v3_collo_proto_msgTypes,
	}.Build()
	File_api_v3_collo_proto = out.File
	file_api_v3_collo_proto_rawDesc = nil
	file_api_v3_collo_proto_goTypes = nil
	file_api_v3_collo_proto_depIdxs = nil
}
