// @generated by protoc-gen-es v1.6.0 with parameter "target=js"
// @generated from file api/v3/collo.proto (package api.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * 共起ネットワーク情報を取得する。
 *
 * @generated from message api.v3.NetworkStreamRequest
 */
export const NetworkStreamRequest = proto3.makeMessageType(
  "api.v3.NetworkStreamRequest",
  () => [
    { no: 1, name: "config", kind: "message", T: RequestConfig },
    { no: 2, name: "forcus_node_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * 共起ネットワーク情報。とその進捗情報。
 *
 * @generated from message api.v3.NetworkStreamResponse
 */
export const NetworkStreamResponse = proto3.makeMessageType(
  "api.v3.NetworkStreamResponse",
  () => [
    { no: 1, name: "nodes", kind: "message", T: Node, repeated: true },
    { no: 2, name: "edges", kind: "message", T: Edge, repeated: true },
    { no: 3, name: "meta", kind: "message", T: Meta },
    { no: 4, name: "process", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * 共起行列中の任意の数のノードを重要度順に取得する。
 *
 * @generated from message api.v3.NodeRateStreamRequest
 */
export const NodeRateStreamRequest = proto3.makeMessageType(
  "api.v3.NodeRateStreamRequest",
  () => [
    { no: 1, name: "config", kind: "message", T: RequestConfig },
    { no: 2, name: "offset", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * 共起行列中の任意の数のノードを重要度順に返す。
 *
 * @generated from message api.v3.NodeRateStreamResponse
 */
export const NodeRateStreamResponse = proto3.makeMessageType(
  "api.v3.NodeRateStreamResponse",
  () => [
    { no: 1, name: "nodes", kind: "message", T: Node, repeated: true },
    { no: 2, name: "num", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "next", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "meta", kind: "message", T: Meta },
    { no: 6, name: "process", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * @generated from message api.v3.RequestConfig
 */
export const RequestConfig = proto3.makeMessageType(
  "api.v3.RequestConfig",
  () => [
    { no: 1, name: "keyword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from", kind: "message", T: Timestamp },
    { no: 3, name: "until", kind: "message", T: Timestamp },
    { no: 4, name: "part_of_speech_types", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 5, name: "stopwords", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "forcus_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "pick_group_type", kind: "enum", T: proto3.getEnumType(RequestConfig_PickGroupType) },
    { no: 8, name: "ndl_api_type", kind: "enum", T: proto3.getEnumType(RequestConfig_NdlApiType) },
    { no: 9, name: "use_ndl_cache", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "create_ndl_cache", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "ndl_cache_dir", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from enum api.v3.RequestConfig.PickGroupType
 */
export const RequestConfig_PickGroupType = proto3.makeEnum(
  "api.v3.RequestConfig.PickGroupType",
  [
    {no: 0, name: "PICK_GROUP_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "PICK_GROUP_TYPE_ISSUEID", localName: "ISSUEID"},
    {no: 2, name: "PICK_GROUP_TYPE_MONTH", localName: "MONTH"},
  ],
);

/**
 * @generated from enum api.v3.RequestConfig.NdlApiType
 */
export const RequestConfig_NdlApiType = proto3.makeEnum(
  "api.v3.RequestConfig.NdlApiType",
  [
    {no: 0, name: "NDL_API_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "NDL_API_TYPE_SPEECH_UNSPECIFIED", localName: "SPEECH_UNSPECIFIED"},
    {no: 2, name: "NDL_API_TYPE_MEETING", localName: "MEETING"},
  ],
);

/**
 * @generated from message api.v3.Node
 */
export const Node = proto3.makeMessageType(
  "api.v3.Node",
  () => [
    { no: 1, name: "node_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "word", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "num_edges", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message api.v3.Edge
 */
export const Edge = proto3.makeMessageType(
  "api.v3.Edge",
  () => [
    { no: 1, name: "edge_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "node_id1", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "node_id2", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * @generated from message api.v3.Meta
 */
export const Meta = proto3.makeMessageType(
  "api.v3.Meta",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from", kind: "message", T: Timestamp },
    { no: 3, name: "until", kind: "message", T: Timestamp },
    { no: 4, name: "metas", kind: "message", T: DocMeta, repeated: true },
  ],
);

/**
 * @generated from message api.v3.DocMeta
 */
export const DocMeta = proto3.makeMessageType(
  "api.v3.DocMeta",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "at", kind: "message", T: Timestamp },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

